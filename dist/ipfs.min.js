var ipfs={};ipfs.localProvider={host:"localhost",port:"5001",protocol:"http"};ipfs.setProvider=function(t){if(!t)t=this.localProvider;if(typeof t==="object"&&!t.hasOwnProperty("host")){return}ipfs.api=t};ipfs.api_url=function(t){var e=ipfs.api;return e.protocol+"://"+e.host+(e.port?":"+e.port:"")+(e.root?e.root:"")+"/api/v0"+t};function ensureProvider(t){if(!ipfs.api){t("No provider set",null);return false}return true}function request(t){if(!ensureProvider(t.callback))return;var e=new XMLHttpRequest;e.addEventListener("load",function(){if(e.status!=200)t.callback(e.responseText,null);else{var r=e.responseText;if(t.transform){r=t.transform(r)}t.callback(null,r)}});e.open(t.method||"GET",ipfs.api_url(t.uri));if(t.accept){e.setRequestHeader("accept",t.accept)}if(t.payload){e.enctype="multipart/form-data";e.send(t.payload)}else{e.send()}}ipfs.add=function(t,e){var r=new FormData;r.append("file",new Blob([t],{}));request({callback:e,method:"POST",uri:"/add",payload:r,accept:"application/json",transform:function(t){return JSON.parse(t)["Hash"]}})};ipfs.catText=function(t,e){request({callback:e,uri:"/cat/"+t})};ipfs.cat=ipfs.catText;ipfs.addJson=function(t,e){var r=JSON.stringify(t);ipfs.add(r,e)};ipfs.catJson=function(t,e){ipfs.catText(t,function(t,r){if(t)e(t,{});var i={};try{i=typeof r==="string"?JSON.parse(r):r}catch(o){t=o}e(t,i)})};if(window!=="undefined"){window.ipfs=ipfs}if(typeof module!=="undefined"&&module.exports){module.exports=ipfs}
